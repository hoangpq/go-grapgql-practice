{"dependencies":[{"name":"graphql","loc":{"line":9,"column":23}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getQueryFacts;\nexports.collectVariables = collectVariables;\n\nvar _graphql = require('graphql');\n\n/**\n * Provided previous \"queryFacts\", a GraphQL schema, and a query document\n * string, return a set of facts about that query useful for GraphiQL features.\n *\n * If the query cannot be parsed, returns undefined.\n */\nfunction getQueryFacts(schema, documentStr) {\n  if (!documentStr) {\n    return;\n  }\n\n  var documentAST = void 0;\n  try {\n    documentAST = (0, _graphql.parse)(documentStr);\n  } catch (e) {\n    return;\n  }\n\n  var variableToType = schema ? collectVariables(schema, documentAST) : null;\n\n  // Collect operations by their names.\n  var operations = [];\n  documentAST.definitions.forEach(function (def) {\n    if (def.kind === 'OperationDefinition') {\n      operations.push(def);\n    }\n  });\n\n  return { variableToType: variableToType, operations: operations };\n}\n\n/**\n * Provided a schema and a document, produces a `variableToType` Object.\n */\n/**\n *  Copyright (c) Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\nfunction collectVariables(schema, documentAST) {\n  var variableToType = Object.create(null);\n  documentAST.definitions.forEach(function (definition) {\n    if (definition.kind === 'OperationDefinition') {\n      var variableDefinitions = definition.variableDefinitions;\n      if (variableDefinitions) {\n        variableDefinitions.forEach(function (_ref) {\n          var variable = _ref.variable,\n              type = _ref.type;\n\n          var inputType = (0, _graphql.typeFromAST)(schema, type);\n          if (inputType) {\n            variableToType[variable.name.value] = inputType;\n          }\n        });\n      }\n    }\n  });\n  return variableToType;\n}"},"hash":"45cfb5bee1029d4cdf235811a1a04484"}