{"dependencies":[{"name":"react","loc":{"line":10,"column":21}},{"name":"react-dom","loc":{"line":14,"column":24}},{"name":"prop-types","loc":{"line":18,"column":25}},{"name":"codemirror","loc":{"line":62,"column":31}},{"name":"codemirror/addon/fold/foldgutter","loc":{"line":63,"column":14}},{"name":"codemirror/addon/fold/brace-fold","loc":{"line":64,"column":14}},{"name":"codemirror/addon/dialog/dialog","loc":{"line":65,"column":14}},{"name":"codemirror/addon/search/search","loc":{"line":66,"column":14}},{"name":"codemirror/addon/search/searchcursor","loc":{"line":67,"column":14}},{"name":"codemirror/addon/search/jump-to-line","loc":{"line":68,"column":14}},{"name":"codemirror/keymap/sublime","loc":{"line":69,"column":14}},{"name":"codemirror-graphql/results/mode","loc":{"line":70,"column":14}},{"name":"codemirror-graphql/utils/info-addon","loc":{"line":73,"column":16}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ResultViewer = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\nopyright (c) Facebook, Inc.\nll rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  This source code is licensed under the license found in the\nfile in the root directory of this source tree.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * ResultViewer\n *\n * Maintains an instance of CodeMirror for viewing a GraphQL response.\n *\n * Props:\n *\n *   - value: The text of the editor.\n *\n */\nvar ResultViewer = exports.ResultViewer = function (_React$Component) {\n  _inherits(ResultViewer, _React$Component);\n\n  function ResultViewer() {\n    _classCallCheck(this, ResultViewer);\n\n    return _possibleConstructorReturn(this, (ResultViewer.__proto__ || Object.getPrototypeOf(ResultViewer)).call(this));\n  }\n\n  _createClass(ResultViewer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Lazily require to ensure requiring GraphiQL outside of a Browser context\n      // does not produce an error.\n      var CodeMirror = require('codemirror');\n      require('codemirror/addon/fold/foldgutter');\n      require('codemirror/addon/fold/brace-fold');\n      require('codemirror/addon/dialog/dialog');\n      require('codemirror/addon/search/search');\n      require('codemirror/addon/search/searchcursor');\n      require('codemirror/addon/search/jump-to-line');\n      require('codemirror/keymap/sublime');\n      require('codemirror-graphql/results/mode');\n\n      if (this.props.ResultsTooltip) {\n        require('codemirror-graphql/utils/info-addon');\n        var tooltipDiv = document.createElement('div');\n        CodeMirror.registerHelper('info', 'graphql-results', function (token, options, cm, pos) {\n          var Tooltip = _this2.props.ResultsTooltip;\n          _reactDom2.default.render(_react2.default.createElement(Tooltip, { pos: pos }), tooltipDiv);\n          return tooltipDiv;\n        });\n      }\n\n      this.viewer = CodeMirror(this._node, {\n        lineWrapping: true,\n        value: this.props.value || '',\n        readOnly: true,\n        theme: this.props.editorTheme || 'graphiql',\n        mode: 'graphql-results',\n        keyMap: 'sublime',\n        foldGutter: {\n          minFoldSize: 4\n        },\n        gutters: ['CodeMirror-foldgutter'],\n        info: Boolean(this.props.ResultsTooltip),\n        extraKeys: {\n          // Persistent search box in Query Editor\n          'Cmd-F': 'findPersistent',\n          'Ctrl-F': 'findPersistent',\n\n          // Editor improvements\n          'Ctrl-Left': 'goSubwordLeft',\n          'Ctrl-Right': 'goSubwordRight',\n          'Alt-Left': 'goGroupLeft',\n          'Alt-Right': 'goGroupRight'\n        }\n      });\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps) {\n      return this.props.value !== nextProps.value;\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.viewer.setValue(this.props.value || '');\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.viewer = null;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      return _react2.default.createElement('div', {\n        className: 'result-window',\n        ref: function ref(node) {\n          _this3._node = node;\n        }\n      });\n    }\n\n    /**\n     * Public API for retrieving the CodeMirror instance from this\n     * React component.\n     */\n\n  }, {\n    key: 'getCodeMirror',\n    value: function getCodeMirror() {\n      return this.viewer;\n    }\n\n    /**\n     * Public API for retrieving the DOM client height for this component.\n     */\n\n  }, {\n    key: 'getClientHeight',\n    value: function getClientHeight() {\n      return this._node && this._node.clientHeight;\n    }\n  }]);\n\n  return ResultViewer;\n}(_react2.default.Component);\n\nResultViewer.propTypes = {\n  value: _propTypes2.default.string,\n  editorTheme: _propTypes2.default.string,\n  ResultsTooltip: _propTypes2.default.any\n};"},"hash":"90bf84fbb54486dab20630125d1bf251"}