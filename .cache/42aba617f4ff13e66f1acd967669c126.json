{"dependencies":[{"name":"../jsutils/invariant","loc":{"line":8,"column":25}},{"name":"../jsutils/keyMap","loc":{"line":12,"column":22}},{"name":"../jsutils/keyValMap","loc":{"line":16,"column":25}},{"name":"./buildASTSchema","loc":{"line":20,"column":30}},{"name":"./valueFromAST","loc":{"line":22,"column":28}},{"name":"../error/GraphQLError","loc":{"line":24,"column":28}},{"name":"../type/schema","loc":{"line":26,"column":22}},{"name":"../type/definition","loc":{"line":28,"column":26}},{"name":"../type/directives","loc":{"line":30,"column":26}},{"name":"../type/introspection","loc":{"line":32,"column":29}},{"name":"../type/scalars","loc":{"line":34,"column":23}},{"name":"../language/kinds","loc":{"line":36,"column":21}}],"generated":{"js":"\"use strict\";function e(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t]);return n.default=e,n}function n(e){return e&&e.__esModule?e:{default:e}}function t(e,n){function t(e){var n=v(e.name);return n||(0,i.default)(0,\"Missing type from schema\"),n}function a(e){var n=v(e.name.value);if(!n)throw new l.GraphQLError('Unknown type: \"'+e.name.value+'\". Ensure that this type exists either in the original schema, or is added in a type definition.',[e]);return n}function o(e){var n=a(e);return n instanceof h.GraphQLObjectType||(0,i.default)(0,\"Must be Object type.\"),n}function s(e){var n=a(e);return n instanceof h.GraphQLInterfaceType||(0,i.default)(0,\"Must be Interface type.\"),n}function v(n){var a=x[n];if(a)return a;var i=e.getType(n);if(i){var u=function(e){if(e instanceof h.GraphQLObjectType)return function(e){var n=e.name,r=e.extensionASTNodes;G[n]&&(r=r.concat(G[n]));return new h.GraphQLObjectType({name:n,description:e.description,interfaces:function(){return function(e){var n=e.getInterfaces().map(t),r=G[e.name];r&&r.forEach(function(t){t.definition.interfaces.forEach(function(t){var r=t.name.value;if(n.some(function(e){return e.name===r}))throw new l.GraphQLError('Type \"'+e.name+'\" already implements \"'+r+'\". It cannot also be implemented in this type extension.',[t]);n.push(s(t))})});return n}(e)},fields:function(){return _(e)},astNode:e.astNode,extensionASTNodes:r,isTypeOf:e.isTypeOf})}(e);if(e instanceof h.GraphQLInterfaceType)return function(e){return new h.GraphQLInterfaceType({name:e.name,description:e.description,fields:function(){return _(e)},astNode:e.astNode,resolveType:e.resolveType})}(e);if(e instanceof h.GraphQLUnionType)return function(e){return new h.GraphQLUnionType({name:e.name,description:e.description,types:e.getTypes().map(t),astNode:e.astNode,resolveType:e.resolveType})}(e);return e}(i);return x[n]=u,u}var f=Q[n];if(f){var d=function(e){switch(e.kind){case m.OBJECT_TYPE_DEFINITION:return function(e){return new h.GraphQLObjectType({name:e.name.value,description:(0,p.getDescription)(e),interfaces:function(){return function(e){return e.interfaces&&e.interfaces.map(s)}(e)},fields:function(){return E(e)},astNode:e})}(e);case m.INTERFACE_TYPE_DEFINITION:return function(e){return new h.GraphQLInterfaceType({name:e.name.value,description:(0,p.getDescription)(e),fields:function(){return E(e)},astNode:e,resolveType:r})}(e);case m.UNION_TYPE_DEFINITION:return function(e){return new h.GraphQLUnionType({name:e.name.value,description:(0,p.getDescription)(e),types:e.types.map(o),astNode:e,resolveType:r})}(e);case m.SCALAR_TYPE_DEFINITION:return function(e){return new h.GraphQLScalarType({name:e.name.value,description:(0,p.getDescription)(e),astNode:e,serialize:function(e){return e},parseValue:function(){return!1},parseLiteral:function(){return!1}})}(e);case m.ENUM_TYPE_DEFINITION:return function(e){return new h.GraphQLEnumType({name:e.name.value,description:(0,p.getDescription)(e),values:(0,c.default)(e.values,function(e){return e.name.value},function(e){return{description:(0,p.getDescription)(e),deprecationReason:(0,p.getDeprecationReason)(e),astNode:e}}),astNode:e})}(e);case m.INPUT_OBJECT_TYPE_DEFINITION:return function(e){return new h.GraphQLInputObjectType({name:e.name.value,description:(0,p.getDescription)(e),fields:function(){return L(e.fields)},astNode:e})}(e)}throw new TypeError(\"Unknown type kind \"+e.kind)}(f);return x[n]=d,d}}function _(e){var n=Object.create(null),t=e.getFields();Object.keys(t).forEach(function(e){var r=t[e];n[e]={description:r.description,deprecationReason:r.deprecationReason,type:I(r.type),args:(0,u.default)(r.args,function(e){return e.name}),astNode:r.astNode,resolve:r.resolve}});var r=G[e.name];return r&&r.forEach(function(r){r.definition.fields.forEach(function(r){var a=r.name.value;if(t[a])throw new l.GraphQLError('Field \"'+e.name+\".\"+a+'\" already exists in the schema. It cannot also be defined in this type extension.',[r]);n[a]={description:(0,p.getDescription)(r),type:O(r.type),args:L(r.arguments),deprecationReason:(0,p.getDeprecationReason)(r),astNode:r}})}),n}function I(e){return e instanceof h.GraphQLList?new h.GraphQLList(I(e.ofType)):e instanceof h.GraphQLNonNull?new h.GraphQLNonNull(I(e.ofType)):t(e)}function E(e){return(0,c.default)(e.fields,function(e){return e.name.value},function(e){return{type:O(e.type),description:(0,p.getDescription)(e),args:L(e.arguments),deprecationReason:(0,p.getDeprecationReason)(e),astNode:e}})}function L(e){return(0,c.default)(e,function(e){return e.name.value},function(e){var n=g(e.type);return{type:n,description:(0,p.getDescription)(e),defaultValue:(0,f.valueFromAST)(e.defaultValue,n),astNode:e}})}function g(e){if(e.kind===m.LIST_TYPE)return new h.GraphQLList(g(e.type));if(e.kind===m.NON_NULL_TYPE){var n=g(e.type);return n instanceof h.GraphQLNonNull&&(0,i.default)(0,\"Must be nullable\"),new h.GraphQLNonNull(n)}return function(e){return(0,h.assertInputType)(a(e))}(e)}function O(e){if(e.kind===m.LIST_TYPE)return new h.GraphQLList(O(e.type));if(e.kind===m.NON_NULL_TYPE){var n=O(e.type);return n instanceof h.GraphQLNonNull&&(0,i.default)(0,\"Must be nullable\"),new h.GraphQLNonNull(n)}return function(e){return(0,h.assertOutputType)(a(e))}(e)}e instanceof d.GraphQLSchema||(0,i.default)(0,\"Must provide valid GraphQLSchema\"),n&&n.kind===m.DOCUMENT||(0,i.default)(0,\"Must provide valid Document AST\");for(var Q=Object.create(null),G=Object.create(null),D=[],w=0;w<n.definitions.length;w++){var b=n.definitions[w];switch(b.kind){case m.OBJECT_TYPE_DEFINITION:case m.INTERFACE_TYPE_DEFINITION:case m.ENUM_TYPE_DEFINITION:case m.UNION_TYPE_DEFINITION:case m.SCALAR_TYPE_DEFINITION:case m.INPUT_OBJECT_TYPE_DEFINITION:var F=b.name.value;if(e.getType(F))throw new l.GraphQLError('Type \"'+F+'\" already exists in the schema. It cannot also be defined in this type definition.',[b]);Q[F]=b;break;case m.TYPE_EXTENSION_DEFINITION:var S=b.definition.name.value,j=e.getType(S);if(!j)throw new l.GraphQLError('Cannot extend type \"'+S+'\" because it does not exist in the existing schema.',[b.definition]);if(!(j instanceof h.GraphQLObjectType))throw new l.GraphQLError('Cannot extend non-object type \"'+S+'\".',[b.definition]);var k=G[S];k?k.push(b):k=[b],G[S]=k;break;case m.DIRECTIVE_DEFINITION:var P=b.name.value;if(e.getDirective(P))throw new l.GraphQLError('Directive \"'+P+'\" already exists in the schema. It cannot be redefined.',[b]);D.push(b)}}if(0===Object.keys(G).length&&0===Object.keys(Q).length&&0===D.length)return e;var x={String:N.GraphQLString,Int:N.GraphQLInt,Float:N.GraphQLFloat,Boolean:N.GraphQLBoolean,ID:N.GraphQLID,__Schema:T.__Schema,__Directive:T.__Directive,__DirectiveLocation:T.__DirectiveLocation,__Type:T.__Type,__Field:T.__Field,__InputValue:T.__InputValue,__EnumValue:T.__EnumValue,__TypeKind:T.__TypeKind},M=t(e.getQueryType()),Y=e.getMutationType(),U=Y?t(Y):null,q=e.getSubscriptionType(),R=q?t(q):null,A=e.getTypeMap(),C=Object.keys(A).map(function(e){return t(A[e])});return Object.keys(Q).forEach(function(e){C.push(a(Q[e]))}),new d.GraphQLSchema({query:M,mutation:U,subscription:R,types:C,directives:function(){var n=e.getDirectives();n||(0,i.default)(0,\"schema must have default directives\");var t=D.map(function(e){return function(e){return new y.GraphQLDirective({name:e.name.value,description:(0,p.getDescription)(e),locations:e.locations.map(function(e){return e.value}),args:e.arguments&&L(e.arguments),astNode:e})}(e)});return n.concat(t)}(),astNode:e.astNode})}function r(){throw new Error(\"Extended Schema cannot use Interface or Union types for execution.\")}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.extendSchema=t;var a=require(\"../jsutils/invariant\"),i=n(a),o=require(\"../jsutils/keyMap\"),u=n(o),s=require(\"../jsutils/keyValMap\"),c=n(s),p=require(\"./buildASTSchema\"),f=require(\"./valueFromAST\"),l=require(\"../error/GraphQLError\"),d=require(\"../type/schema\"),h=require(\"../type/definition\"),y=require(\"../type/directives\"),T=require(\"../type/introspection\"),N=require(\"../type/scalars\"),v=require(\"../language/kinds\"),m=e(v);"},"hash":"05c3f14b0b9ff2647c8856ee4fd910d5"}