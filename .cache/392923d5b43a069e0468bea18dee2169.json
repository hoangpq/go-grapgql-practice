{"dependencies":[{"name":"graphql","loc":{"line":8,"column":23}},{"name":"graphql/type/introspection","loc":{"line":10,"column":29}},{"name":"./forEachState","loc":{"line":12,"column":28}}],"generated":{"js":"\"use strict\";function e(e){return e&&e.__esModule?e:{default:e}}function t(e,t){var i={schema:e,type:null,parentType:null,inputType:null,directiveDef:null,fieldDef:null,argDef:null,argDefs:null,objectFieldDefs:null};return(0,p.default)(t,function(t){switch(t.kind){case\"Query\":case\"ShortQuery\":i.type=e.getQueryType();break;case\"Mutation\":i.type=e.getMutationType();break;case\"Subscription\":i.type=e.getSubscriptionType();break;case\"InlineFragment\":case\"FragmentDefinition\":t.type&&(i.type=e.getType(t.type));break;case\"Field\":case\"AliasedField\":i.fieldDef=i.type&&t.name?a(e,i.parentType,t.name):null,i.type=i.fieldDef&&i.fieldDef.type;break;case\"SelectionSet\":i.parentType=(0,n.getNamedType)(i.type);break;case\"Directive\":i.directiveDef=t.name&&e.getDirective(t.name);break;case\"Arguments\":var l=\"Field\"===t.prevState.kind?i.fieldDef:\"Directive\"===t.prevState.kind?i.directiveDef:\"AliasedField\"===t.prevState.kind?t.prevState.name&&a(e,i.parentType,t.prevState.name):null;i.argDefs=l&&l.args;break;case\"Argument\":if(i.argDef=null,i.argDefs)for(var p=0;p<i.argDefs.length;p++)if(i.argDefs[p].name===t.name){i.argDef=i.argDefs[p];break}i.inputType=i.argDef&&i.argDef.type;break;case\"EnumValue\":var u=(0,n.getNamedType)(i.inputType);i.enumValue=u instanceof n.GraphQLEnumType?r(u.getValues(),function(e){return e.value===t.name}):null;break;case\"ListValue\":var f=(0,n.getNullableType)(i.inputType);i.inputType=f instanceof n.GraphQLList?f.ofType:null;break;case\"ObjectValue\":var s=(0,n.getNamedType)(i.inputType);i.objectFieldDefs=s instanceof n.GraphQLInputObjectType?s.getFields():null;break;case\"ObjectField\":var y=t.name&&i.objectFieldDefs?i.objectFieldDefs[t.name]:null;i.inputType=y&&y.type;break;case\"NamedType\":i.type=e.getType(t.name)}}),i}function a(e,t,a){return a===i.SchemaMetaFieldDef.name&&e.getQueryType()===t?i.SchemaMetaFieldDef:a===i.TypeMetaFieldDef.name&&e.getQueryType()===t?i.TypeMetaFieldDef:a===i.TypeNameMetaFieldDef.name&&(0,n.isCompositeType)(t)?i.TypeNameMetaFieldDef:t.getFields?t.getFields()[a]:void 0}function r(e,t){for(var a=0;a<e.length;a++)if(t(e[a]))return e[a]}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=t;var n=require(\"graphql\"),i=require(\"graphql/type/introspection\"),l=require(\"./forEachState\"),p=e(l);"},"hash":"38eaaaaba7717bc50b18c2781e6cc20d"}