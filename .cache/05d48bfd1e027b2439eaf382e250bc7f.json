{"dependencies":[],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar QueryStore = function () {\n  function QueryStore(key, storage) {\n    _classCallCheck(this, QueryStore);\n\n    this.key = key;\n    this.storage = storage;\n    this.items = this.fetchAll();\n  }\n\n  _createClass(QueryStore, [{\n    key: \"contains\",\n    value: function contains(item) {\n      return this.items.some(function (x) {\n        return x.query === item.query && x.variables === item.variables && x.operationName === item.operationName;\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(item) {\n      var index = this.items.findIndex(function (x) {\n        return x.query === item.query && x.variables === item.variables && x.operationName === item.operationName;\n      });\n      if (index !== -1) {\n        this.items.splice(index, 1);\n        this.save();\n      }\n    }\n  }, {\n    key: \"fetchRecent\",\n    value: function fetchRecent() {\n      return this.items[this.items.length - 1];\n    }\n  }, {\n    key: \"fetchAll\",\n    value: function fetchAll() {\n      var raw = this.storage.get(this.key);\n      if (raw) {\n        return JSON.parse(raw)[this.key];\n      }\n      return [];\n    }\n  }, {\n    key: \"push\",\n    value: function push(item) {\n      this.items.push(item);\n      this.save();\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      this.items.shift();\n      this.save();\n    }\n  }, {\n    key: \"save\",\n    value: function save() {\n      this.storage.set(this.key, JSON.stringify(_defineProperty({}, this.key, this.items)));\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this.items.length;\n    }\n  }]);\n\n  return QueryStore;\n}();\n\nexports.default = QueryStore;"},"hash":"7fc7cffefa4c1c80e1d5d7907c8518e1"}