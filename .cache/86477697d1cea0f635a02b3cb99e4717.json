{"dependencies":[{"name":"react","loc":{"line":12,"column":21}},{"name":"prop-types","loc":{"line":16,"column":25}},{"name":"graphql","loc":{"line":20,"column":23}},{"name":"./DocExplorer/FieldDoc","loc":{"line":22,"column":24}},{"name":"./DocExplorer/SchemaDoc","loc":{"line":26,"column":25}},{"name":"./DocExplorer/SearchBox","loc":{"line":30,"column":25}},{"name":"./DocExplorer/SearchResults","loc":{"line":34,"column":29}},{"name":"./DocExplorer/TypeDoc","loc":{"line":38,"column":23}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DocExplorer = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _graphql = require('graphql');\n\nvar _FieldDoc = require('./DocExplorer/FieldDoc');\n\nvar _FieldDoc2 = _interopRequireDefault(_FieldDoc);\n\nvar _SchemaDoc = require('./DocExplorer/SchemaDoc');\n\nvar _SchemaDoc2 = _interopRequireDefault(_SchemaDoc);\n\nvar _SearchBox = require('./DocExplorer/SearchBox');\n\nvar _SearchBox2 = _interopRequireDefault(_SearchBox);\n\nvar _SearchResults = require('./DocExplorer/SearchResults');\n\nvar _SearchResults2 = _interopRequireDefault(_SearchResults);\n\nvar _TypeDoc = require('./DocExplorer/TypeDoc');\n\nvar _TypeDoc2 = _interopRequireDefault(_TypeDoc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\nopyright (c) Facebook, Inc.\nll rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhis source code is licensed under the license found in the\nfile in the root directory of this source tree.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar initialNav = {\n  name: 'Schema',\n  title: 'Documentation Explorer'\n};\n\n/**\n * DocExplorer\n *\n * Shows documentations for GraphQL definitions from the schema.\n *\n * Props:\n *\n *   - schema: A required GraphQLSchema instance that provides GraphQL document\n *     definitions.\n *\n * Children:\n *\n *   - Any provided children will be positioned in the right-hand-side of the\n *     top bar. Typically this will be a \"close\" button for temporary explorer.\n *\n */\n\nvar DocExplorer = exports.DocExplorer = function (_React$Component) {\n  _inherits(DocExplorer, _React$Component);\n\n  function DocExplorer() {\n    _classCallCheck(this, DocExplorer);\n\n    var _this = _possibleConstructorReturn(this, (DocExplorer.__proto__ || Object.getPrototypeOf(DocExplorer)).call(this));\n\n    _this.handleNavBackClick = function () {\n      if (_this.state.navStack.length > 1) {\n        _this.setState({ navStack: _this.state.navStack.slice(0, -1) });\n      }\n    };\n\n    _this.handleClickTypeOrField = function (typeOrField) {\n      _this.showDoc(typeOrField);\n    };\n\n    _this.handleSearch = function (value) {\n      _this.showSearch(value);\n    };\n\n    _this.state = { navStack: [initialNav] };\n    return _this;\n  }\n\n  _createClass(DocExplorer, [{\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return this.props.schema !== nextProps.schema || this.state.navStack !== nextState.navStack;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var schema = this.props.schema;\n      var navStack = this.state.navStack;\n      var navItem = navStack[navStack.length - 1];\n\n      var content = void 0;\n      if (schema === undefined) {\n        // Schema is undefined when it is being loaded via introspection.\n        content = _react2.default.createElement(\n          'div',\n          { className: 'spinner-container' },\n          _react2.default.createElement('div', { className: 'spinner' })\n        );\n      } else if (!schema) {\n        // Schema is null when it explicitly does not exist, typically due to\n        // an error during introspection.\n        content = _react2.default.createElement(\n          'div',\n          { className: 'error-container' },\n          'No Schema Available'\n        );\n      } else if (navItem.search) {\n        content = _react2.default.createElement(_SearchResults2.default, {\n          searchValue: navItem.search,\n          withinType: navItem.def,\n          schema: schema,\n          onClickType: this.handleClickTypeOrField,\n          onClickField: this.handleClickTypeOrField\n        });\n      } else if (navStack.length === 1) {\n        content = _react2.default.createElement(_SchemaDoc2.default, { schema: schema, onClickType: this.handleClickTypeOrField });\n      } else if ((0, _graphql.isType)(navItem.def)) {\n        content = _react2.default.createElement(_TypeDoc2.default, {\n          schema: schema,\n          type: navItem.def,\n          onClickType: this.handleClickTypeOrField,\n          onClickField: this.handleClickTypeOrField\n        });\n      } else {\n        content = _react2.default.createElement(_FieldDoc2.default, {\n          field: navItem.def,\n          onClickType: this.handleClickTypeOrField\n        });\n      }\n\n      var shouldSearchBoxAppear = navStack.length === 1 || (0, _graphql.isType)(navItem.def) && navItem.def.getFields;\n\n      var prevName = void 0;\n      if (navStack.length > 1) {\n        prevName = navStack[navStack.length - 2].name;\n      }\n\n      return _react2.default.createElement(\n        'div',\n        { className: 'doc-explorer', key: navItem.name },\n        _react2.default.createElement(\n          'div',\n          { className: 'doc-explorer-title-bar' },\n          prevName && _react2.default.createElement(\n            'div',\n            {\n              className: 'doc-explorer-back',\n              onClick: this.handleNavBackClick },\n            prevName\n          ),\n          _react2.default.createElement(\n            'div',\n            { className: 'doc-explorer-title' },\n            navItem.title || navItem.name\n          ),\n          _react2.default.createElement(\n            'div',\n            { className: 'doc-explorer-rhs' },\n            this.props.children\n          )\n        ),\n        _react2.default.createElement(\n          'div',\n          { className: 'doc-explorer-contents' },\n          shouldSearchBoxAppear && _react2.default.createElement(_SearchBox2.default, {\n            value: navItem.search,\n            placeholder: 'Search ' + navItem.name + '...',\n            onSearch: this.handleSearch\n          }),\n          content\n        )\n      );\n    }\n\n    // Public API\n\n  }, {\n    key: 'showDoc',\n    value: function showDoc(typeOrField) {\n      var navStack = this.state.navStack;\n      var topNav = navStack[navStack.length - 1];\n      if (topNav.def !== typeOrField) {\n        this.setState({\n          navStack: navStack.concat([{\n            name: typeOrField.name,\n            def: typeOrField\n          }])\n        });\n      }\n    }\n\n    // Public API\n\n  }, {\n    key: 'showDocForReference',\n    value: function showDocForReference(reference) {\n      if (reference.kind === 'Type') {\n        this.showDoc(reference.type);\n      } else if (reference.kind === 'Field') {\n        this.showDoc(reference.field);\n      } else if (reference.kind === 'Argument' && reference.field) {\n        this.showDoc(reference.field);\n      } else if (reference.kind === 'EnumValue' && reference.type) {\n        this.showDoc(reference.type);\n      }\n    }\n\n    // Public API\n\n  }, {\n    key: 'showSearch',\n    value: function showSearch(search) {\n      var navStack = this.state.navStack.slice();\n      var topNav = navStack[navStack.length - 1];\n      navStack[navStack.length - 1] = _extends({}, topNav, { search: search });\n      this.setState({ navStack: navStack });\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.setState({ navStack: [initialNav] });\n    }\n  }]);\n\n  return DocExplorer;\n}(_react2.default.Component);\n\nDocExplorer.propTypes = {\n  schema: _propTypes2.default.instanceOf(_graphql.GraphQLSchema)\n};"},"hash":"9485ace159278086eb0d5d5c563f81cb"}