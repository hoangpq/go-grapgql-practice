{"dependencies":[{"name":"../jsutils/invariant","loc":{"line":8,"column":25}},{"name":"../jsutils/keyMap","loc":{"line":12,"column":22}},{"name":"../jsutils/keyValMap","loc":{"line":16,"column":25}},{"name":"./valueFromAST","loc":{"line":20,"column":28}},{"name":"../language/parser","loc":{"line":22,"column":22}},{"name":"../type/schema","loc":{"line":24,"column":22}},{"name":"../type/definition","loc":{"line":26,"column":26}},{"name":"../type/introspection","loc":{"line":28,"column":29}},{"name":"../type/scalars","loc":{"line":30,"column":23}},{"name":"../type/directives","loc":{"line":32,"column":26}}],"generated":{"js":"\"use strict\";function e(e){return e&&e.__esModule?e:{default:e}}function n(e){function n(e){if(e.kind===f.TypeKind.LIST){var r=e.ofType;if(!r)throw new Error(\"Decorated type deeper than introspection query.\");return new l.GraphQLList(n(r))}if(e.kind===f.TypeKind.NON_NULL){var o=e.ofType;if(!o)throw new Error(\"Decorated type deeper than introspection query.\");var a=n(o);return a instanceof l.GraphQLNonNull&&(0,i.default)(0,\"No nesting nonnull.\"),new l.GraphQLNonNull(a)}return t(e.name)}function t(e){if(I[e])return I[e];var n=L[e];if(!n)throw new Error(\"Invalid or incomplete schema, unknown type: \"+e+\". Ensure that a full introspection query is used in order to build a client schema.\");var t=function(e){switch(e.kind){case f.TypeKind.SCALAR:return function(e){return new l.GraphQLScalarType({name:e.name,description:e.description,serialize:function(e){return e},parseValue:function(){return!1},parseLiteral:function(){return!1}})}(e);case f.TypeKind.OBJECT:return function(e){return new l.GraphQLObjectType({name:e.name,description:e.description,interfaces:e.interfaces.map(u),fields:function(){return T(e)}})}(e);case f.TypeKind.INTERFACE:return function(e){return new l.GraphQLInterfaceType({name:e.name,description:e.description,fields:function(){return T(e)},resolveType:r})}(e);case f.TypeKind.UNION:return function(e){return new l.GraphQLUnionType({name:e.name,description:e.description,types:e.possibleTypes.map(o),resolveType:r})}(e);case f.TypeKind.ENUM:return function(e){return new l.GraphQLEnumType({name:e.name,description:e.description,values:(0,c.default)(e.enumValues,function(e){return e.name},function(e){return{description:e.description,deprecationReason:e.deprecationReason}})})}(e);case f.TypeKind.INPUT_OBJECT:return function(e){return new l.GraphQLInputObjectType({name:e.name,description:e.description,fields:function(){return v(e.inputFields)}})}(e);default:throw new Error(\"Invalid or incomplete schema, unknown kind: \"+e.kind+\". Ensure that a full introspection query is used in order to build a client schema.\")}}(n);return I[e]=t,t}function o(e){var r=n(e);return r instanceof l.GraphQLObjectType||(0,i.default)(0,\"Introspection must provide object type for possibleTypes.\"),r}function u(e){var r=n(e);return r instanceof l.GraphQLInterfaceType||(0,i.default)(0,\"Introspection must provide interface type for interfaces.\"),r}function T(e){return(0,c.default)(e.fields,function(e){return e.name},function(e){return{description:e.description,deprecationReason:e.deprecationReason,type:function(e){var r=n(e);return(0,l.isOutputType)(r)||(0,i.default)(0,\"Introspection must provide output type for fields.\"),r}(e.type),args:v(e.args)}})}function v(e){return(0,c.default)(e,function(e){return e.name},_)}function _(e){var r=function(e){var r=n(e);return(0,l.isInputType)(r)||(0,i.default)(0,\"Introspection must provide input type for arguments.\"),r}(e.type),t=e.defaultValue?(0,p.valueFromAST)((0,s.parseValue)(e.defaultValue),r):void 0;return{name:e.name,description:e.description,type:r,defaultValue:t}}var h=e.__schema,L=(0,a.default)(h.types,function(e){return e.name}),I={String:y.GraphQLString,Int:y.GraphQLInt,Float:y.GraphQLFloat,Boolean:y.GraphQLBoolean,ID:y.GraphQLID,__Schema:f.__Schema,__Directive:f.__Directive,__DirectiveLocation:f.__DirectiveLocation,__Type:f.__Type,__Field:f.__Field,__InputValue:f.__InputValue,__EnumValue:f.__EnumValue,__TypeKind:f.__TypeKind},w=h.types.map(function(e){return t(e.name)}),E=o(h.queryType),N=h.mutationType?o(h.mutationType):null,G=h.subscriptionType?o(h.subscriptionType):null,D=h.directives?h.directives.map(function(e){var n=e.locations?e.locations.slice():[].concat(e.onField?[m.DirectiveLocation.FIELD]:[],e.onOperation?[m.DirectiveLocation.QUERY,m.DirectiveLocation.MUTATION,m.DirectiveLocation.SUBSCRIPTION]:[],e.onFragment?[m.DirectiveLocation.FRAGMENT_DEFINITION,m.DirectiveLocation.FRAGMENT_SPREAD,m.DirectiveLocation.INLINE_FRAGMENT]:[]);return new m.GraphQLDirective({name:e.name,description:e.description,locations:n,args:v(e.args)})}):[];return new d.GraphQLSchema({query:E,mutation:N,subscription:G,types:w,directives:D})}function r(){throw new Error(\"Client Schema cannot use Interface or Union types for execution.\")}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.buildClientSchema=n;var t=require(\"../jsutils/invariant\"),i=e(t),o=require(\"../jsutils/keyMap\"),a=e(o),u=require(\"../jsutils/keyValMap\"),c=e(u),p=require(\"./valueFromAST\"),s=require(\"../language/parser\"),d=require(\"../type/schema\"),l=require(\"../type/definition\"),f=require(\"../type/introspection\"),y=require(\"../type/scalars\"),m=require(\"../type/directives\");"},"hash":"200d83ecab6cc5885e549df7907940c3"}