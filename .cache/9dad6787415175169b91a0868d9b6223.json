{"dependencies":[{"name":"../jsutils/invariant","loc":{"line":29,"column":25}},{"name":"../jsutils/isNullish","loc":{"line":33,"column":25}},{"name":"../language/kinds","loc":{"line":37,"column":21}},{"name":"../utilities/assertValidName","loc":{"line":41,"column":31}}],"generated":{"js":"\"use strict\";function e(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}function t(e){return e&&e.__esModule?e:{default:e}}function n(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function o(e){return e instanceof I||e instanceof A||e instanceof M||e instanceof J||e instanceof D||e instanceof P||e instanceof R||e instanceof U}function r(e){return o(e)||(0,k.default)(0,\"Expected \"+String(e)+\" to be a GraphQL type.\"),e}function i(e){return e instanceof I||e instanceof D||e instanceof P||e instanceof U&&i(e.ofType)||e instanceof R&&i(e.ofType)}function a(e){return i(e)||(0,k.default)(0,\"Expected \"+String(e)+\" to be a GraphQL input type.\"),e}function s(e){return e instanceof I||e instanceof A||e instanceof M||e instanceof J||e instanceof D||e instanceof U&&s(e.ofType)||e instanceof R&&s(e.ofType)}function p(e){return s(e)||(0,k.default)(0,\"Expected \"+String(e)+\" to be a GraphQL output type.\"),e}function u(e){return e instanceof I||e instanceof D}function f(e){return u(e)||(0,k.default)(0,\"Expected \"+String(e)+\" to be a GraphQL leaf type.\"),e}function c(e){return e instanceof A||e instanceof M||e instanceof J}function l(e){return c(e)||(0,k.default)(0,\"Expected \"+String(e)+\" to be a GraphQL composite type.\"),e}function y(e){return e instanceof M||e instanceof J}function d(e){return y(e)||(0,k.default)(0,\"Expected \"+String(e)+\" to be a GraphQL abstract type.\"),e}function h(e){return e instanceof U?e.ofType:e}function m(e){return e instanceof I||e instanceof A||e instanceof M||e instanceof J||e instanceof D||e instanceof P}function v(e){return m(e)||(0,k.default)(0,\"Expected \"+String(e)+\" to be a GraphQL named type.\"),e}function g(e){if(e){for(var t=e;t instanceof R||t instanceof U;)t=t.ofType;return t}}function b(e){return\"function\"==typeof e?e():e}function T(e,t){var n=b(t);if(!n)return[];Array.isArray(n)||(0,k.default)(0,e.name+\" interfaces must be an Array or a function which returns an Array.\");var o=Object.create(null);return n.forEach(function(t){t instanceof M||(0,k.default)(0,e.name+\" may only implement Interface types, it cannot implement: \"+String(t)+\".\"),o[t.name]&&(0,k.default)(0,e.name+\" may declare it implements \"+t.name+\" only once.\"),o[t.name]=!0,\"function\"!=typeof t.resolveType&&\"function\"!=typeof e.isTypeOf&&(0,k.default)(0,\"Interface Type \"+t.name+' does not provide a \"resolveType\" function and implementing Type '+e.name+' does not provide a \"isTypeOf\" function. There is no way to resolve this implementing type during execution.')}),n}function N(e,t){var n=b(t);L(n)||(0,k.default)(0,e.name+\" fields must be an object with field names as keys or a function which returns such an object.\");var o=Object.keys(n);o.length>0||(0,k.default)(0,e.name+\" fields must be an object with field names as keys or a function which returns such an object.\");var r=Object.create(null);return o.forEach(function(t){(0,E.assertValidName)(t);var o=n[t];L(o)||(0,k.default)(0,e.name+\".\"+t+\" field config must be an object\"),o.hasOwnProperty(\"isDeprecated\")&&(0,k.default)(0,e.name+\".\"+t+' should provide \"deprecationReason\" instead of \"isDeprecated\".');var a=j({},o,{isDeprecated:Boolean(o.deprecationReason),name:t});s(a.type)||(0,k.default)(0,e.name+\".\"+t+\" field type must be Output Type but got: \"+String(a.type)+\".\"),S(a.resolve)||(0,k.default)(0,e.name+\".\"+t+\" field resolver must be a function if provided, but got: \"+String(a.resolve)+\".\");var p=o.args;p?(L(p)||(0,k.default)(0,e.name+\".\"+t+\" args must be an object with argument names as keys.\"),a.args=Object.keys(p).map(function(n){(0,E.assertValidName)(n);var o=p[n];return i(o.type)||(0,k.default)(0,e.name+\".\"+t+\"(\"+n+\":) argument type must be Input Type but got: \"+String(o.type)+\".\"),{name:n,description:void 0===o.description?null:o.description,type:o.type,defaultValue:o.defaultValue,astNode:o.astNode}})):a.args=[],r[t]=a}),r}function L(e){return e&&\"object\"===(void 0===e?\"undefined\":O(e))&&!Array.isArray(e)}function S(e){return null==e||\"function\"==typeof e}function _(e,t){var n=b(t);Array.isArray(n)&&n.length>0||(0,k.default)(0,\"Must provide Array of types or a function which returns such an array for Union \"+e.name+\".\");var o=Object.create(null);return n.forEach(function(t){t instanceof A||(0,k.default)(0,e.name+\" may only contain Object types, it cannot contain: \"+String(t)+\".\"),o[t.name]&&(0,k.default)(0,e.name+\" can include \"+t.name+\" type only once.\"),o[t.name]=!0,\"function\"!=typeof e.resolveType&&\"function\"!=typeof t.isTypeOf&&(0,k.default)(0,'Union type \"'+e.name+'\" does not provide a \"resolveType\" function and possible type \"'+t.name+'\" does not provide an \"isTypeOf\" function. There is no way to resolve this possible type during execution.')}),n}function x(e,t){L(t)||(0,k.default)(0,e.name+\" values must be an object with value names as keys.\");var n=Object.keys(t);return n.length>0||(0,k.default)(0,e.name+\" values must be an object with value names as keys.\"),n.map(function(n){(0,E.assertValidName)(n),-1!==[\"true\",\"false\",\"null\"].indexOf(n)&&(0,k.default)(0,'Name \"'+n+'\" can not be used as an Enum value.');var o=t[n];return L(o)||(0,k.default)(0,e.name+\".\"+n+' must refer to an object with a \"value\" key representing an internal value but got: '+String(o)+\".\"),o.hasOwnProperty(\"isDeprecated\")&&(0,k.default)(0,e.name+\".\"+n+' should provide \"deprecationReason\" instead of \"isDeprecated\".'),{name:n,description:o.description,isDeprecated:Boolean(o.deprecationReason),deprecationReason:o.deprecationReason,astNode:o.astNode,value:o.hasOwnProperty(\"value\")?o.value:n}})}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.GraphQLNonNull=exports.GraphQLList=exports.GraphQLInputObjectType=exports.GraphQLEnumType=exports.GraphQLUnionType=exports.GraphQLInterfaceType=exports.GraphQLObjectType=exports.GraphQLScalarType=void 0;var O=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},j=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e};exports.isType=o,exports.assertType=r,exports.isInputType=i,exports.assertInputType=a,exports.isOutputType=s,exports.assertOutputType=p,exports.isLeafType=u,exports.assertLeafType=f,exports.isCompositeType=c,exports.assertCompositeType=l,exports.isAbstractType=y,exports.assertAbstractType=d,exports.getNullableType=h,exports.isNamedType=m,exports.assertNamedType=v,exports.getNamedType=g;var V=require(\"../jsutils/invariant\"),k=t(V),G=require(\"../jsutils/isNullish\"),Q=t(G),w=require(\"../language/kinds\"),C=e(w),E=require(\"../utilities/assertValidName\"),I=exports.GraphQLScalarType=function(){function e(t){n(this,e),(0,E.assertValidName)(t.name),this.name=t.name,this.description=t.description,this.astNode=t.astNode,\"function\"!=typeof t.serialize&&(0,k.default)(0,this.name+' must provide \"serialize\" function. If this custom Scalar is also used as an input type, ensure \"parseValue\" and \"parseLiteral\" functions are also provided.'),(t.parseValue||t.parseLiteral)&&(\"function\"!=typeof t.parseValue||\"function\"!=typeof t.parseLiteral)&&(0,k.default)(0,this.name+' must provide both \"parseValue\" and \"parseLiteral\" functions.'),this._scalarConfig=t}return e.prototype.serialize=function(e){return(0,this._scalarConfig.serialize)(e)},e.prototype.isValidValue=function(e){return!(0,Q.default)(this.parseValue(e))},e.prototype.parseValue=function(e){var t=this._scalarConfig.parseValue;return t&&!(0,Q.default)(e)?t(e):void 0},e.prototype.isValidLiteral=function(e){return!(0,Q.default)(this.parseLiteral(e))},e.prototype.parseLiteral=function(e){var t=this._scalarConfig.parseLiteral;return t?t(e):void 0},e.prototype.toString=function(){return this.name},e}();I.prototype.toJSON=I.prototype.inspect=I.prototype.toString;var A=exports.GraphQLObjectType=function(){function e(t){n(this,e),(0,E.assertValidName)(t.name,t.isIntrospection),this.name=t.name,this.description=t.description,this.astNode=t.astNode,this.extensionASTNodes=t.extensionASTNodes||[],t.isTypeOf&&\"function\"!=typeof t.isTypeOf&&(0,k.default)(0,this.name+' must provide \"isTypeOf\" as a function.'),this.isTypeOf=t.isTypeOf,this._typeConfig=t}return e.prototype.getFields=function(){return this._fields||(this._fields=N(this,this._typeConfig.fields))},e.prototype.getInterfaces=function(){return this._interfaces||(this._interfaces=T(this,this._typeConfig.interfaces))},e.prototype.toString=function(){return this.name},e}();A.prototype.toJSON=A.prototype.inspect=A.prototype.toString;var M=exports.GraphQLInterfaceType=function(){function e(t){n(this,e),(0,E.assertValidName)(t.name),this.name=t.name,this.description=t.description,this.astNode=t.astNode,t.resolveType&&\"function\"!=typeof t.resolveType&&(0,k.default)(0,this.name+' must provide \"resolveType\" as a function.'),this.resolveType=t.resolveType,this._typeConfig=t}return e.prototype.getFields=function(){return this._fields||(this._fields=N(this,this._typeConfig.fields))},e.prototype.toString=function(){return this.name},e}();M.prototype.toJSON=M.prototype.inspect=M.prototype.toString;var J=exports.GraphQLUnionType=function(){function e(t){n(this,e),(0,E.assertValidName)(t.name),this.name=t.name,this.description=t.description,this.astNode=t.astNode,t.resolveType&&\"function\"!=typeof t.resolveType&&(0,k.default)(0,this.name+' must provide \"resolveType\" as a function.'),this.resolveType=t.resolveType,this._typeConfig=t}return e.prototype.getTypes=function(){return this._types||(this._types=_(this,this._typeConfig.types))},e.prototype.toString=function(){return this.name},e}();J.prototype.toJSON=J.prototype.inspect=J.prototype.toString;var D=exports.GraphQLEnumType=function(){function e(t){n(this,e),this.name=t.name,(0,E.assertValidName)(t.name,t.isIntrospection),this.description=t.description,this.astNode=t.astNode,this._values=x(this,t.values),this._enumConfig=t}return e.prototype.getValues=function(){return this._values},e.prototype.getValue=function(e){return this._getNameLookup()[e]},e.prototype.serialize=function(e){var t=this._getValueLookup().get(e);return t?t.name:null},e.prototype.isValidValue=function(e){return\"string\"==typeof e&&void 0!==this._getNameLookup()[e]},e.prototype.parseValue=function(e){if(\"string\"==typeof e){var t=this._getNameLookup()[e];if(t)return t.value}},e.prototype.isValidLiteral=function(e){return e.kind===C.ENUM&&void 0!==this._getNameLookup()[e.value]},e.prototype.parseLiteral=function(e){if(e.kind===C.ENUM){var t=this._getNameLookup()[e.value];if(t)return t.value}},e.prototype._getValueLookup=function(){if(!this._valueLookup){var e=new Map;this.getValues().forEach(function(t){e.set(t.value,t)}),this._valueLookup=e}return this._valueLookup},e.prototype._getNameLookup=function(){if(!this._nameLookup){var e=Object.create(null);this.getValues().forEach(function(t){e[t.name]=t}),this._nameLookup=e}return this._nameLookup},e.prototype.toString=function(){return this.name},e}();D.prototype.toJSON=D.prototype.inspect=D.prototype.toString;var P=exports.GraphQLInputObjectType=function(){function e(t){n(this,e),(0,E.assertValidName)(t.name),this.name=t.name,this.description=t.description,this.astNode=t.astNode,this._typeConfig=t}return e.prototype.getFields=function(){return this._fields||(this._fields=this._defineFieldMap())},e.prototype._defineFieldMap=function(){var e=this,t=b(this._typeConfig.fields);L(t)||(0,k.default)(0,this.name+\" fields must be an object with field names as keys or a function which returns such an object.\");var n=Object.keys(t);n.length>0||(0,k.default)(0,this.name+\" fields must be an object with field names as keys or a function which returns such an object.\");var o=Object.create(null);return n.forEach(function(n){(0,E.assertValidName)(n);var r=j({},t[n],{name:n});i(r.type)||(0,k.default)(0,e.name+\".\"+n+\" field type must be Input Type but got: \"+String(r.type)+\".\"),null!=r.resolve&&(0,k.default)(0,e.name+\".\"+n+\" field type has a resolve property, but Input Types cannot define resolvers.\"),o[n]=r}),o},e.prototype.toString=function(){return this.name},e}();P.prototype.toJSON=P.prototype.inspect=P.prototype.toString;var R=exports.GraphQLList=function(){function e(t){n(this,e),o(t)||(0,k.default)(0,\"Can only create List of a GraphQLType but got: \"+String(t)+\".\"),this.ofType=t}return e.prototype.toString=function(){return\"[\"+String(this.ofType)+\"]\"},e}();R.prototype.toJSON=R.prototype.inspect=R.prototype.toString;var U=exports.GraphQLNonNull=function(){function e(t){n(this,e),(!o(t)||t instanceof e)&&(0,k.default)(0,\"Can only create NonNull of a Nullable GraphQLType but got: \"+String(t)+\".\"),this.ofType=t}return e.prototype.toString=function(){return this.ofType.toString()+\"!\"},e}();U.prototype.toJSON=U.prototype.inspect=U.prototype.toString;"},"hash":"93d01f5e12f936d22e42bf9f67678177"}